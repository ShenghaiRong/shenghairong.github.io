[{"content":"前言 本教程将指导你如何通过 Cloudflare Worker 在 Cursor 中以第三方api的方式访问 Claude 和 Deepseek 模型。通过覆盖 OpenAI 的 URL 地址，我们可以使用 第三方api 来访问这些模型。\n功能特点 支持 OpenAI 的 GPT 模型 支持将请求中的 \u0026lsquo;my-cld\u0026rsquo; 改写为 \u0026lsquo;claude\u0026rsquo;（通过 第三方api 代理地址） 支持将请求中的 \u0026lsquo;my-deepseek\u0026rsquo; 改写为 \u0026lsquo;deepseek\u0026rsquo;（直接通过 Deepseek 官方 API） 详细步骤 1. 创建 Cloudflare Worker 登录到 Cloudflare Dashboard 在左侧菜单中选择 \u0026ldquo;Workers \u0026amp; Pages\u0026rdquo; 点击 \u0026ldquo;Create Application\u0026rdquo; 选择 \u0026ldquo;Create Worker\u0026rdquo; 为你的 Worker 命名，然后点击 \u0026ldquo;Deploy\u0026rdquo; 进入 Worker 编辑界面 2. 配置环境变量 在 Cloudflare Dashboard 中：\n进入你的 Worker 的设置页面 点击 \u0026ldquo;Settings\u0026rdquo; 选项卡 找到 \u0026ldquo;Variables\u0026rdquo; 部分 点击 \u0026ldquo;Add variable\u0026rdquo; 按钮 添加以下环境变量：\nONEAPI_UPSTREAM: 你的 第三方api 代理地址 DEEPSEEK_UPSTREAM: deepseek 代理地址, 官方为 api.deepseek.com VALID_ORIGINAL_API_KEY: 你的 第三方api key DEEPSEEK_API_KEY: 你的 Deepseek API key 对于包含敏感信息的变量（API Keys），确保：\n点击 \u0026ldquo;Encrypt\u0026rdquo; 选项 设置类型为 \u0026ldquo;Secret text\u0026rdquo; 3. 配置 Worker 代码 将以下代码复制到 Worker 中： 点击查看 ▼ export default { async fetch(request, env, ctx) { return await handleRequest(request, env); } }; // 主要处理函数 async function handleRequest(request, env) { // 从环境变量获取配置 const default_upstream = env.ONEAPI_UPSTREAM const deepseek_upstream = env.DEEPSEEK_UPSTREAM const upstream_path = \u0026#39;/\u0026#39; const upstream_mobile = default_upstream const blocked_region = [] const blocked_ip_address = [\u0026#39;0.0.0.0\u0026#39;, \u0026#39;127.0.0.1\u0026#39;] const https = true const disable_cache = false // 从环境变量获取 API Keys const VALID_ORIGINAL_API_KEY = env.VALID_ORIGINAL_API_KEY const DEEPSEEK_API_KEY = env.DEEPSEEK_API_KEY const region = request.headers.get(\u0026#39;cf-ipcountry\u0026#39;); const upper_region = region ? region.toUpperCase() : \u0026#39;\u0026#39;; const ip_address = request.headers.get(\u0026#39;cf-connecting-ip\u0026#39;); const user_agent = request.headers.get(\u0026#39;user-agent\u0026#39;); let response = null; let url = new URL(request.url); let url_hostname = url.hostname; let isDeepseekRequest = false; let originalModel = \u0026#39;\u0026#39;; if (request.method === \u0026#39;POST\u0026#39;) { const contentType = request.headers.get(\u0026#39;content-type\u0026#39;); if (contentType \u0026amp;\u0026amp; contentType.includes(\u0026#39;application/json\u0026#39;)) { try { const clonedRequest = request.clone(); const body = await clonedRequest.json(); const originalApiKey = request.headers.get(\u0026#39;authorization\u0026#39;)?.replace(\u0026#39;Bearer \u0026#39;, \u0026#39;\u0026#39;).trim() || \u0026#39;\u0026#39;; if (originalApiKey === VALID_ORIGINAL_API_KEY \u0026amp;\u0026amp; body.model \u0026amp;\u0026amp; typeof body.model === \u0026#39;string\u0026#39; \u0026amp;\u0026amp; (body.model.startsWith(\u0026#39;deepseek\u0026#39;) || body.model.startsWith(\u0026#39;my-deepseek\u0026#39;))) { isDeepseekRequest = true; originalModel = body.model; } } catch (error) { } } } if (https == true) { url.protocol = \u0026#39;https:\u0026#39;; } else { url.protocol = \u0026#39;http:\u0026#39;; } let upstream_domain; if (isDeepseekRequest) { upstream_domain = deepseek_upstream; } else if (await device_status(user_agent)) { upstream_domain = default_upstream; } else { upstream_domain = upstream_mobile; } url.host = upstream_domain; if (url.pathname == \u0026#39;//\u0026#39; || url.pathname == \u0026#39;/\u0026#39;) { url.pathname = upstream_path; } else { if (isDeepseekRequest) { url.pathname = \u0026#39;/v1/chat/completions\u0026#39;; } else { url.pathname = upstream_path + url.pathname; } } if (blocked_region.includes(upper_region)) { response = new Response(\u0026#39;Access denied: WorkersProxy is not available in your region yet.\u0026#39;, { status: 403 }); } else if (blocked_ip_address.includes(ip_address)) { response = new Response(\u0026#39;Access denied: Your IP address is blocked by WorkersProxy.\u0026#39;, { status: 403 }); } else { let method = request.method; if (method === \u0026#39;POST\u0026#39;) { const contentType = request.headers.get(\u0026#39;content-type\u0026#39;); if (contentType \u0026amp;\u0026amp; contentType.includes(\u0026#39;application/json\u0026#39;)) { let body = await request.json(); if (body.model \u0026amp;\u0026amp; typeof body.model === \u0026#39;string\u0026#39;) { if (isDeepseekRequest) { if (originalModel.startsWith(\u0026#39;my-deepseek\u0026#39;)) { body.model = originalModel.replace(\u0026#39;my-deepseek\u0026#39;, \u0026#39;deepseek\u0026#39;); } } else { body.model = body.model.replace(\u0026#39;my-cld\u0026#39;, \u0026#39;claude\u0026#39;); } } const headers = new Headers(); for (const [key, value] of request.headers.entries()) { headers.set(key.toLowerCase(), value); } if (isDeepseekRequest) { headers.set(\u0026#39;authorization\u0026#39;, `Bearer ${DEEPSEEK_API_KEY}`); } headers.set(\u0026#39;content-type\u0026#39;, \u0026#39;application/json\u0026#39;); let original_response = await fetch(url.href, { method: method, headers: headers, body: JSON.stringify(body) }); let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; if (disable_cache) { new_response_headers.set(\u0026#39;Cache-Control\u0026#39;, \u0026#39;no-store\u0026#39;); } new_response_headers.set(\u0026#39;access-control-allow-origin\u0026#39;, \u0026#39;*\u0026#39;); new_response_headers.set(\u0026#39;access-control-allow-credentials\u0026#39;, \u0026#39;true\u0026#39;); new_response_headers.delete(\u0026#39;content-security-policy\u0026#39;); new_response_headers.delete(\u0026#39;content-security-policy-report-only\u0026#39;); new_response_headers.delete(\u0026#39;clear-site-data\u0026#39;); if (new_response_headers.get(\u0026#34;x-pjax-url\u0026#34;)) { new_response_headers.set(\u0026#34;x-pjax-url\u0026#34;, response_headers.get(\u0026#34;x-pjax-url\u0026#34;).replace(\u0026#34;//\u0026#34; + upstream_domain, \u0026#34;//\u0026#34; + url_hostname)); } const content_type = new_response_headers.get(\u0026#39;content-type\u0026#39;); if (content_type != null \u0026amp;\u0026amp; content_type.includes(\u0026#39;text/html\u0026#39;) \u0026amp;\u0026amp; content_type.includes(\u0026#39;UTF-8\u0026#39;)) { original_text = await replace_response_text(original_response_clone, upstream_domain, url_hostname); } else { original_text = original_response_clone.body; } response = new Response(original_text, { status, headers: new_response_headers }); } else { response = await fetch(request); } } else { response = await fetch(request); } } return response; } async function replace_response_text(response, upstream_domain, host_name) { let text = await response.text() var i, j; for (i in replace_dict) { j = replace_dict[i] if (i == \u0026#39;$upstream\u0026#39;) { i = upstream_domain } else if (i == \u0026#39;$custom_domain\u0026#39;) { i = host_name } if (j == \u0026#39;$upstream\u0026#39;) { j = upstream_domain } else if (j == \u0026#39;$custom_domain\u0026#39;) { j = host_name } let re = new RegExp(i, \u0026#39;g\u0026#39;) text = text.replace(re, j); } return text; } async function device_status(user_agent_info) { var agents = [\u0026#34;Android\u0026#34;, \u0026#34;iPhone\u0026#34;, \u0026#34;SymbianOS\u0026#34;, \u0026#34;Windows Phone\u0026#34;, \u0026#34;iPad\u0026#34;, \u0026#34;iPod\u0026#34;]; var flag = true; for (var v = 0; v \u0026lt; agents.length; v++) { if (user_agent_info.indexOf(agents[v]) \u0026gt; 0) { flag = false; break; } } return flag; } const replace_dict = { \u0026#39;$upstream\u0026#39;: \u0026#39;$custom_domain\u0026#39;, }; 配置说明 在 Cloudflare Workers 中配置的环境变量：\nONEAPI_UPSTREAM: 你的第三方api代理地址，如：api.yourdomain.com\n类型：普通文本 示例：api.yourdomain.com DEEPSEEK_UPSTREAM: 你的deepseek代理地址，如：api.deepseek.com\n类型：普通文本 示例：api.deepseek.com VALID_ORIGINAL_API_KEY: 你的第三方api的 API key\n类型：加密文本（Secret） 示例：sk-xxxxxxxxxxxxxxxxxxxxxxxx DEEPSEEK_API_KEY: 你的 Deepseek API key\n类型：加密文本（Secret） 示例：sk-xxxxxxxxxxxxxxxxxxxxxxxx 安全提示：将 API Keys 存储为加密的环境变量可以：\n防止密钥意外泄露到代码库中 方便进行密钥轮换 在日志中自动隐藏敏感信息 符合安全最佳实践 4. 验证配置 部署完成后，你可以使用以下 curl 命令验证配置是否正常：\n# 测试 Claude 模型 curl https://your-worker.workers.dev/v1/chat/completions -H \u0026#34;Content-Type: application/json\u0026#34; -H \u0026#34;Authorization: Bearer sk-oriapikey\u0026#34; -d \u0026#39;{ \u0026#34;messages\u0026#34;: [ { \u0026#34;role\u0026#34;: \u0026#34;system\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;You are a test assistant.\u0026#34; }, { \u0026#34;role\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;1+1=?\u0026#34; } ], \u0026#34;model\u0026#34;: \u0026#34;my-cld-3-5-sonnet-latest\u0026#34; }\u0026#39; # 测试 Deepseek 模型 curl https://your-worker.workers.dev/v1/chat/completions -H \u0026#34;Content-Type: application/json\u0026#34; -H \u0026#34;Authorization: Bearer sk-oriapikey\u0026#34; -d \u0026#39;{ \u0026#34;messages\u0026#34;: [ { \u0026#34;role\u0026#34;: \u0026#34;system\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;You are a test assistant.\u0026#34; }, { \u0026#34;role\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;1+1=?\u0026#34; } ], \u0026#34;model\u0026#34;: \u0026#34;my-deepseek-coder\u0026#34; }\u0026#39; 5. 在 Cursor 中配置 打开 Cursor 设置 找到 AI 设置部分 在 OpenAI API Key 中填入你配置的 VALID_ORIGINAL_API_KEY 在 API URL 中填入 https://your-worker.workers.dev/v1 重要说明：在 Cursor 中点击验证按钮可能会显示 \u0026ldquo;Invalid openai api key\u0026rdquo; 的错误提示，这是正常现象，不会影响实际使用。只要你在上一步（步骤4）中使用 curl 命令验证通过，就可以正常在 Cursor 的聊天界面中使用各个模型。这是因为 Cursor 的验证机制直接检查 OpenAI 的 API，而我们使用的是代理服务。\n模型映射说明 本配置支持以下模型映射：\nmy-cld-* → claude-*：所有以 my-cld 开头的模型名称会被自动映射到对应的 Claude 模型 my-deepseek-* → deepseek-*：所有以 my-deepseek 开头的模型名称会被自动映射到对应的 Deepseek 模型 例如：\nmy-cld-3-5-sonnet-latest → claude-3-5-sonnet-latest my-deepseek-coder → deepseek-coder 常见问题排查 如果遇到 403 错误：\n检查 API key 是否正确配置 确认 IP 和地区是否在屏蔽列表中 如果遇到模型不可用：\n确认模型名称是否正确映射 检查 第三方api 是否支持该模型 验证 Deepseek API key 是否有效 如果遇到连接问题：\n确认 Worker 是否正常部署 检查 upstream 地址是否正确配置 验证网络连接是否正常 注意事项 请确保你的 API Key 安全，不要泄露给他人 建议定期更换 API Key 如果使用频率较高，请注意 Cloudflare Worker 的使用配额 建议在正式使用前进行充分的测试验证 如果你需要任何帮助或遇到问题，欢迎提出反馈。\n","permalink":"https://shenghairong.github.io/posts/2024-11-11-oneapi_cursor/","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e本教程将指导你如何通过 Cloudflare Worker 在 Cursor 中以第三方api的方式访问 Claude 和 Deepseek 模型。通过覆盖 OpenAI 的 URL 地址，我们可以使用 第三方api 来访问这些模型。\u003c/p\u003e\n\u003ch2 id=\"功能特点\"\u003e功能特点\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e支持 OpenAI 的 GPT 模型\u003c/li\u003e\n\u003cli\u003e支持将请求中的 \u0026lsquo;my-cld\u0026rsquo; 改写为 \u0026lsquo;claude\u0026rsquo;（通过 第三方api 代理地址）\u003c/li\u003e\n\u003cli\u003e支持将请求中的 \u0026lsquo;my-deepseek\u0026rsquo; 改写为 \u0026lsquo;deepseek\u0026rsquo;（直接通过 Deepseek 官方 API）\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"详细步骤\"\u003e详细步骤\u003c/h2\u003e\n\u003ch3 id=\"1-创建-cloudflare-worker\"\u003e1. 创建 Cloudflare Worker\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e登录到 \u003ca href=\"https://dash.cloudflare.com\"\u003eCloudflare Dashboard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e在左侧菜单中选择 \u0026ldquo;Workers \u0026amp; Pages\u0026rdquo;\u003c/li\u003e\n\u003cli\u003e点击 \u0026ldquo;Create Application\u0026rdquo;\u003c/li\u003e\n\u003cli\u003e选择 \u0026ldquo;Create Worker\u0026rdquo;\u003c/li\u003e\n\u003cli\u003e为你的 Worker 命名，然后点击 \u0026ldquo;Deploy\u0026rdquo;\u003c/li\u003e\n\u003cli\u003e进入 Worker 编辑界面\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"2-配置环境变量\"\u003e2. 配置环境变量\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e在 Cloudflare Dashboard 中：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e进入你的 Worker 的设置页面\u003c/li\u003e\n\u003cli\u003e点击 \u0026ldquo;Settings\u0026rdquo; 选项卡\u003c/li\u003e\n\u003cli\u003e找到 \u0026ldquo;Variables\u0026rdquo; 部分\u003c/li\u003e\n\u003cli\u003e点击 \u0026ldquo;Add variable\u0026rdquo; 按钮\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e添加以下环境变量：\u003c/p\u003e","title":"通过CF Worker代理第三方api在Cursor中使用Claude"},{"content":"前言 本教程详细说明如何使用 Hugo + GitHub Pages + Paper Mod 主题来部署网站，通过私有仓库管理源码，公开仓库发布网站。\n最终仓库结构如下所示：\n私有仓库 (hugo-source)\n├── content/ │ └── posts/ │ └── hello-world.md # 原始文章 ├── themes/ ├── hugo.yaml └── public/ # 这个文件夹是一个独立的 git 仓库 ├── index.html # 构建后的文件 ├── posts/ │ └── hello-world/ │ └── index.html # 构建后的文章 └── ... 公开仓库 (username.github.io)\n├── index.html # 与 public 文件夹中的文件相同 ├── posts/ │ └── hello-world/ │ └── index.html └── ... 步骤 1. 创建两个 GitHub 仓库 - 私有仓库：hugo-source (用于存放源码) - 公开仓库：username.github.io (用于发布网站) 2. 安装必要工具 # 安装 Hugo (以 Ubuntu 为例) # sudo apt install hugo # 安装 Hugo （以 Mac 为例） brew install hugo # 验证安装 hugo version 3. 创建新的 Hugo 站点 # 创建新站点, --format yaml 指定hugo 配置文件使用 yaml 格式，默认是toml格式 hugo new site /Users/yourname/Documents/hugo-source --format yaml cd /Users/yourname/Documents/hugo-source # 初始化 git 仓库 git init 4. 安装 PaperMod 主题 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) 5. 配置 hugo.yaml 点击查看 ▼ baseURL: https://username.github.io/ languageCode: en-us title: My Blog theme: PaperMod # 基础设置 enableGitInfo: false enableEmoji: true # 支持 emoji 显示 paginate: 10 # 一页显示10篇文章 # params底下的应该是PaperMod的设置 params: homeInfoParams: Title: \u0026#34;👋 Welcome to My Blog\u0026#34; Content: \u0026#34;Hi, this is my blog.\u0026#34; socialIcons: - name: \u0026#34;rss\u0026#34; url: \u0026#34;/index.xml\u0026#34; - name: \u0026#34;email\u0026#34; url: \u0026#34;your_email@example.com\u0026#34; - name: \u0026#34;github\u0026#34; url: \u0026#34;https://github.com/username\u0026#34; label: text: \u0026#34;User\u0026#39;s Blog\u0026#34; icon: /favicon.ico # 导航栏显示的图标 iconHeight: 35 # 控制导航栏图标大小 assets: disableHLJS: true favicon: \u0026#34;/favicon.ico\u0026#34; favicon16x16: \u0026#34;/favicon-16x16.png\u0026#34; favicon32x32: \u0026#34;/favicon-32x32.png\u0026#34; # apple_touch_icon: \u0026#34;/apple-touch-icon.png\u0026#34; # android_chrome_192: \u0026#34;/android-chrome-192x192.png\u0026#34; # android_chrome_512: \u0026#34;/android-chrome-512x512.png\u0026#34; env: production defaultTheme: auto disableSpecial1stPost: true ShowRssButtonInSectionTermList: true ShowToc: true # 文章设置 ShowReadingTime: false # 显示阅读时间 ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: true ShowWordCount: true # 显示字数统计 ShowAuthor: true # 显示作者 menu: main: - name: Posts url: /posts/ weight: 1 - name: Archive url: /archive/ weight: 2 - name: Search url: /search/ weight: 3 - name: Tags url: /tags/ weight: 4 # 输出设置 outputs: home: - HTML - RSS - JSON # 用于搜索功能 section: - HTML # 文章页面设置 permalinks: posts: /posts/:year-:month-:day-:filename/ # Markdown 渲染设置 markup: goldmark: renderer: unsafe: true 6. 配置搜索和归档功能 为了确保搜索功能正常工作，创建 content/search.md：\n--- title: \u0026#34;Search\u0026#34; layout: \u0026#34;search\u0026#34; --- 还需要创建 content/archive.md：\n--- title: \u0026#34;Archive\u0026#34; layout: \u0026#34;archives\u0026#34; url: \u0026#34;/archive/\u0026#34; summary: archives --- 7. 自定义浏览器标签栏图标 选择你喜欢的图片，在 favicon.io 网站上生成 favicon\n将生成的文件下载并替换到 static 目录下, 结构如下：\nhugo-source/ ├── content/ ├── static/ │ ├── android-chrome-192x192.png # Android Chrome 浏览器图标（中尺寸） │ ├── android-chrome-512x512.png # Android Chrome 浏览器图标（大尺寸） │ ├── apple-touch-icon.png # iOS/macOS 设备图标 (180x180) │ ├── favicon-16x16.png # 小尺寸网站图标 │ ├── favicon-32x32.png # 标准网站图标 │ └── favicon.ico # 基础网站图标（兼容性） ... └── hugo.yaml 8. 创建第一篇文章 # 创建新文章 hugo new posts/hello-world/index.md 编辑 content/posts/hello-world/index.md:\n--- title: \u0026#34;Hello World\u0026#34; date: 2024-11-10 draft: false tags: [\u0026#34;test\u0026#34;] --- This is my first post! 本地预览（可选）：\nhugo server # 如果文章设置的draft 为true， 则需要加上 -D 参数用于启用草稿模式，即 draft 为 true 的文章也会被预览 9. 设置部署工作流 在 hugo-source 仓库中创建文件 .github/workflows/deploy.yaml: 点击查看 ▼ name: Deploy Hugo site to Pages on: push: branches: - main workflow_dispatch: # 允许手动触发 # 设置并发部署策略 concurrency: group: \u0026#34;pages\u0026#34; cancel-in-progress: false # 默认使用 bash defaults: run: shell: bash jobs: build-and-deploy: runs-on: ubuntu-latest env: HUGO_VERSION: 0.138.0 # 指定 Hugo 版本 steps: # 安装 Hugo - name: Install Hugo CLI run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026amp;\u0026amp; sudo dpkg -i ${{ runner.temp }}/hugo.deb # 安装 Dart Sass（如果需要） - name: Install Dart Sass run: sudo snap install dart-sass # 检出代码 - name: Checkout uses: actions/checkout@v4 with: submodules: recursive # 获取子模块 fetch-depth: 0 # 获取完整的 git 历史 # 安装 Node.js 依赖（如果需要） - name: Install Node.js dependencies run: | if [[ -f package-lock.json || -f npm-shrinkwrap.json ]]; then npm ci fi # 构建 Hugo 站点 - name: Build with Hugo env: HUGO_ENVIRONMENT: production TZ: Asia/Shanghai # 设置时区 run: | hugo \\ --gc \\ --minify \\ --baseURL \u0026#34;https://username.github.io/\u0026#34; # 替换为你的 URL # 部署到外部仓库 - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} external_repository: username/username.github.io # 替换为你的外部仓库 publish_branch: main publish_dir: ./public #cname: your-custom-domain.com # 添加这一行，替换为你的域名,避免每次deploy后都要手动更新CNAME文件 commit_message: ${{ github.event.head_commit.message }} user_name: \u0026#39;github-actions[bot]\u0026#39; user_email: \u0026#39;github-actions[bot]@users.noreply.github.com\u0026#39; 10. 折叠长代码块 在 assets/css/extended/custom.css 文件中添加以下代码： 点击查看 ▼ /* 折叠代码块 */ .collapse-wrapper { margin: 1rem 0; } .collapse-button { width: 100%; padding: 0.5rem; background-color: var(--border); border: none; cursor: pointer; text-align: left; font-size: 0.9rem; } .collapse-button:hover { background-color: var(--border-hover); } .collapse-content { display: none; padding: 1rem; border: 1px solid var(--border); } .collapse-wrapper.active .collapse-content { display: block; } /* 暗色主题适配 */ [theme=\u0026#34;dark\u0026#34;] .collapse-button { background-color: var(--entry); color: var(--primary); } [theme=\u0026#34;dark\u0026#34;] .collapse-button:hover { background-color: var(--border); } /* 折叠代码块 结束 */ 在 layouts/shortcodes/detail-tag.html 文件中添加以下代码：\n{{ $_hugo_config := `{ \u0026#34;version\u0026#34;: 1 }` }} \u0026lt;div class=\u0026#34;collapse-wrapper\u0026#34;\u0026gt; \u0026lt;button class=\u0026#34;collapse-button\u0026#34; onclick=\u0026#34;this.parentElement.classList.toggle(\u0026#39;active\u0026#39;)\u0026#34;\u0026gt; {{ with .Get \u0026#34;summary\u0026#34; }}{{ . }}{{ else }}点击展开{{ end }} \u0026lt;span class=\u0026#34;collapse-icon\u0026#34;\u0026gt;▼\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;collapse-content\u0026#34;\u0026gt; {{ .Inner | markdownify }} \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 在写markdown时，使用如下代码包裹需要折叠的代码块： {‎{\u0026lt; detail-tag summary=\u0026#34;点击查看\u0026#34; \u0026gt;}} ```python Long code block ``` {‎{\u0026lt; /detail-tag \u0026gt;}} 11. 设置部署密钥 首先生成 SSH 密钥对： # 在本地终端执行 ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email@example.com\u0026#34; -f gh-pages 这会生成两个文件：\ngh-pages（私钥） gh-pages.pub（公钥） 在私有仓库 (hugo-source) 添加私钥：\n打开私有仓库的 Settings 点击左侧的 \u0026ldquo;Secrets and variables\u0026rdquo; -\u0026gt; \u0026ldquo;Actions\u0026rdquo; 点击 \u0026ldquo;New repository secret\u0026rdquo; Name 填写：ACTIONS_DEPLOY_KEY Secret 填写：复制 gh-pages 文件的全部内容（私钥） 点击 \u0026ldquo;Add secret\u0026rdquo; 在公开仓库 (username.github.io) 添加公钥：\n打开公开仓库的 Settings 点击左侧的 \u0026ldquo;Deploy keys\u0026rdquo; 点击 \u0026ldquo;Add deploy key\u0026rdquo; Title 填写：HUGO_DEPLOY_KEY（或其他描述性名称） Key 填写：复制 gh-pages.pub 文件的全部内容（公钥） 勾选 \u0026ldquo;Allow write access\u0026rdquo; 点击 \u0026ldquo;Add key\u0026rdquo; 注意\n密钥生成后要立即妥善保管，特别是私钥部分 确保将完整的密钥内容复制，包括开头的 -----BEGIN... 和结尾的 -----END... 添加后可以删除本地的 gh-pages 和 gh-pages.pub 文件 这样设置后，GitHub Actions 就能安全地将构建的内容部署到公开仓库了。\n12. 初始化和推送源码仓库 # 在 hugo-source 目录下 git add . git commit -m \u0026#34;Initial commit\u0026#34; # git branch -M main #(如果需要) git remote add origin git@github.com:username/hugo-source.git git push -u origin main 13. 完成设置 等待 GitHub Actions 完成部署 访问 https://username.github.io 查看你的网站 维护网站的工作流程 在本地 hugo-source 目录中编写新文章： hugo new posts/new-post/index.md 编辑文章内容, 如果使用cursor，可以直接在 content/posts/new-post/index.md 文件中复制粘贴图片，cursor会自动将图片保存到 content/posts/new-post/下。\n本地预览（可选）：\nhugo server # 如果文章设置的draft 为true， 则需要加上 -D 参数用于启用草稿模式，即 draft 为 true 的文章也会被预览 提交和推送更改： git add . git commit -m \u0026#34;Add new post\u0026#34; git push origin main GitHub Actions 会自动部署更新后的内容到你的网站 使用自定义域名 如果你想使用自定义域名（如 user.me），需要完成以下配置：\nGitHub Pages 配置\n在前面的 deploy.yaml 文件中取消注释并修改 cname 参数： - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: # ... 其他配置 ... cname: www.user.me # 取消注释并修改为你的域名 这样可以避免每次部署后手动更新 CNAME 文件。\nCloudflare DNS 配置\n添加以下 DNS 记录（全部设置为 \u0026ldquo;仅 DNS\u0026rdquo;，不使用代理）： # 配置 www 子域名 CNAME www username.github.io # 配置根域名 A 记录 A @ 185.199.108.153 A @ 185.199.109.153 A @ 185.199.110.153 A @ 185.199.111.153 添加页面规则：将 user.me 重定向到 www.user.me Cloudflare SSL 配置\n在 SSL/TLS 设置中选择 \u0026ldquo;Full\u0026rdquo; 模式 这样配置后，你就可以在 GitHub Pages 中启用 \u0026ldquo;Enforce HTTPS\u0026rdquo; 选项 完成以上设置后，访问者可以通过 https://www.user.me 或 https://user.me 访问你的网站。\n注意事项 将 username 替换为你的 GitHub 用户名 确保在 GitHub 上正确配置了 SSH 密钥 私有仓库中的 public 目录应该被添加到 .gitignore 中 为了保护隐私，建议使用 ExifTool 工具清除图片中的元数据（metadata）。这些元数据可能包含设备信息、拍摄位置等敏感信息（参考链接）： # 安装 ExifTool brew install exiftool # 清除指定目录下所有图片的元数据（会直接覆盖原文件） exiftool -a -all:all= -r 图片目录路径 -overwrite_original 总结 这样设置后，你就可以在私有仓库中管理网站源码，而生成的静态文件会自动部署到公开仓库中展示。这种方式既保护了源码，又能享受 GitHub Pages 的免费托管服务。\n","permalink":"https://shenghairong.github.io/posts/2024-11-10-hugo-gh_pages/","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e本教程详细说明如何使用 Hugo + GitHub Pages + Paper Mod 主题来部署网站，通过私有仓库管理源码，公开仓库发布网站。\u003c/p\u003e\n\u003cp\u003e最终仓库结构如下所示：\u003c/p\u003e\n\u003cp\u003e私有仓库 (hugo-source)\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e├── content/\n│   └── posts/\n│       └── hello-world.md    # 原始文章\n├── themes/\n├── hugo.yaml\n└── public/                   # 这个文件夹是一个独立的 git 仓库\n    ├── index.html           # 构建后的文件\n    ├── posts/\n    │   └── hello-world/\n    │       └── index.html   # 构建后的文章\n    └── ...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e公开仓库 (username.github.io)\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e├── index.html               # 与 public 文件夹中的文件相同\n├── posts/\n│   └── hello-world/\n│       └── index.html\n└── ...\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"步骤\"\u003e步骤\u003c/h2\u003e\n\u003ch3 id=\"1-创建两个-github-仓库\"\u003e1. \u003cstrong\u003e创建两个 GitHub 仓库\u003c/strong\u003e\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e- 私有仓库：hugo-source (用于存放源码)\n- 公开仓库：username.github.io (用于发布网站)\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"2-安装必要工具\"\u003e2. \u003cstrong\u003e安装必要工具\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 安装 Hugo (以 Ubuntu 为例)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# sudo apt install hugo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 安装 Hugo （以 Mac 为例）\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install hugo\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 验证安装\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"3-创建新的-hugo-站点\"\u003e3. \u003cstrong\u003e创建新的 Hugo 站点\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 创建新站点, --format yaml 指定hugo 配置文件使用 yaml 格式，默认是toml格式\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new site /Users/yourname/Documents/hugo-source --format yaml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecd /Users/yourname/Documents/hugo-source\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 初始化 git 仓库\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit init\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-安装-papermod-主题httpsgithubcomadityatelangehugo-papermodwikiinstallation\"\u003e4. \u003ca href=\"https://github.com/adityatelange/hugo-PaperMod/wiki/Installation\"\u003e\u003cstrong\u003e安装 PaperMod 主题\u003c/strong\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit submodule add --depth\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit submodule update --init --recursive \u003cspan style=\"color:#75715e\"\u003e# needed when you reclone your repo (submodules may not get cloned automatically)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"5-配置-hugoyaml\"\u003e5. \u003cstrong\u003e配置 hugo.yaml\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cdiv class=\"collapse-wrapper\"\u003e\n    \u003cbutton class=\"collapse-button\" onclick=\"this.parentElement.classList.toggle('active')\"\u003e\n        点击查看\n        \u003cspan class=\"collapse-icon\"\u003e▼\u003c/span\u003e\n    \u003c/button\u003e\n    \u003cdiv class=\"collapse-content\"\u003e\n        \u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003ebaseURL\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttps://username.github.io/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elanguageCode\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003een-us\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eMy Blog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etheme\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ePaperMod\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 基础设置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eenableGitInfo\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eenableEmoji\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# 支持 emoji 显示\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003epaginate\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# 一页显示10篇文章\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# params底下的应该是PaperMod的设置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eparams\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ehomeInfoParams\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eTitle\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;👋 Welcome to My Blog\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eContent\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hi, this is my blog.\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003esocialIcons\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;rss\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eurl\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/index.xml\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eurl\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;your_email@example.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eurl\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://github.com/username\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003elabel\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003etext\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;User\u0026#39;s Blog\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eicon\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/favicon.ico \u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# 导航栏显示的图标\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eiconHeight\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e35\u003c/span\u003e  \u003cspan style=\"color:#75715e\"\u003e# 控制导航栏图标大小\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eassets\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003edisableHLJS\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003efavicon\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/favicon.ico\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003efavicon16x16\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/favicon-16x16.png\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003efavicon32x32\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/favicon-32x32.png\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e# apple_touch_icon: \u0026#34;/apple-touch-icon.png\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e# android_chrome_192: \u0026#34;/android-chrome-192x192.png\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e# android_chrome_512: \u0026#34;/android-chrome-512x512.png\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eenv\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eproduction\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003edefaultTheme\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eauto\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003edisableSpecial1stPost\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eShowRssButtonInSectionTermList\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eShowToc\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# 文章设置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eShowReadingTime\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# 显示阅读时间\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eShowPostNavLinks\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eShowBreadCrumbs\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eShowCodeCopyButtons\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eShowWordCount\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# 显示字数统计\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eShowAuthor\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# 显示作者\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003emenu\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003emain\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ePosts\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eurl\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/posts/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eweight\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eArchive\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eurl\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/archive/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eweight\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eSearch\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eurl\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/search/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eweight\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eTags\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eurl\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/tags/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eweight\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 输出设置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eoutputs\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ehome\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#ae81ff\"\u003eHTML\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#ae81ff\"\u003eRSS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#ae81ff\"\u003eJSON\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# 用于搜索功能\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003esection\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#ae81ff\"\u003eHTML\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 文章页面设置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003epermalinks\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eposts\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/posts/:year-:month-:day-:filename/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Markdown 渲染设置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003emarkup\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003egoldmark\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003erenderer\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eunsafe\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e \n\u003ch3 id=\"6-配置搜索和归档功能\"\u003e6. \u003cstrong\u003e配置搜索和归档功能\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003e为了确保搜索功能正常工作，创建 \u003ccode\u003econtent/search.md\u003c/code\u003e：\u003c/p\u003e","title":"免费使用 GitHub 私有仓库部署网站"},{"content":"My First Post Hello World! This is my first post. ","permalink":"https://shenghairong.github.io/posts/2024-11-10-hello-world/","summary":"\u003ch2 id=\"my-first-post\"\u003eMy First Post\u003c/h2\u003e\n\u003cp\u003eHello World! This is my first post.\n\u003cimg alt=\"first-image\" loading=\"lazy\" src=\"/posts/2024-11-10-hello-world/af1338710b3c18d1f413db2729b861db.PNG\"\u003e\u003c/p\u003e","title":"Hello World"}]